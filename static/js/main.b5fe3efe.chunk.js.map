{"version":3,"sources":["config.js","pages/regions/styles.js","pages/regions/index.jsx","components/shared/styles.js","components/shared/Loader.jsx","components/shared/List.jsx","pages/countries/Flag.jsx","pages/countries/Country.jsx","pages/countries/styles.js","pages/countries/index.jsx","components/shared/Header.jsx","components/shared/NoMatch.jsx","styles.js","App.js","serviceWorker.js","index.js"],"names":["theme","lightGrey","purple","config","api","regionList","regionStyles","card","height","cursor","&:hover","backgroundColor","title","fontSize","withStyles","_ref","classes","history","react_default","a","createElement","Grid_default","container","spacing","map","name","key","item","md","xs","Card_default","className","onClick","useCallback","push","concat","CardContent_default","Typography_default","variant","component","loaderStyles","progress","margin","unit","wrapper","minHeight","Loader","children","loading","StyledLoader","_ref2","justify","alignItems","CircularProgress_default","List","Sort","sortBy","React","Children","toArray","sort","b","props","country","Flag","url","styles","flag","backgroundImage","backgroundSize","marginRight","width","Styled","GridItem","value","root","heading","typography","pxToRem","fontWeight","fontWeightRegular","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","countries_Flag","ExpansionPanelDetails_default","Country_GridItem","alpha2Code","capital","region","population","area","timezones","length","languages","language","index","react","buttonContainer","marginBottom","match","_useState","useState","_useState2","Object","slicedToArray","setRegion","_useState3","_useState4","setSortBy","_useState5","_useState6","isLoading","setLoading","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","params","id","sent","json","t0","Error","stop","onSortBy","shared_Loader","Button_default","shared_List","countries_Country","Header","bar","flexDirection","react_router","AppBar_default","path","isExact","color","goBack","ArrowBack_default","NoMatch","to","appStyles","marginTop","padding","shared_Header","exact","Regions","Countries","Boolean","window","location","hostname","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5fe3efe.chunk.js","sourcesContent":["export const theme = {\n  colors: {\n    lightGrey: \"#EFEFEF\",\n    purple: \"#828ED2\"\n  }\n};\n\nexport default {\n  api: \"https://restcountries.eu/rest/v2/region\",\n  regionList: [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"]\n};\n","import { theme } from \"../../config\";\nexport const regionStyles = {\n  card: {\n    height: 120,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.colors.purple\n    }\n  },\n  title: {\n    fontSize: 14\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { regionStyles } from \"./styles\";\nimport config from \"../../config\";\n\nconst Regions = ({ classes, history }) => (\n  <Grid container spacing={16}>\n    {config.regionList.map((name, key) => (\n      <Grid item md={3} xs={12}>\n        <Card\n          container\n          className={classes.card}\n          onClick={useCallback(\n            () => {\n              history.push(`/region/${name}`);\n            },\n            [history]\n          )}\n        >\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    ))}\n  </Grid>\n);\n\nexport default withStyles(regionStyles)(Regions);\n","export const headerStyles = {\n  bar: {\n    height: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n};\n\nexport const loaderStyles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  wrapper: {\n    minHeight: \"100vh\"\n  }\n});\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { loaderStyles } from \"./styles\";\n\nconst Loader = ({ children, loading }) => {\n  const StyledLoader = withStyles(loaderStyles)(({ classes }) => (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.wrapper}\n    >\n      <CircularProgress className={classes.progress} />\n    </Grid>\n  ));\n\n  if (loading) {\n    return <StyledLoader />;\n  } else {\n    return children;\n  }\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst List = {\n  Sort: ({ children, sortBy }) => {\n    return React.Children.toArray(children).sort((a, b) => {\n      let aProp = a.props.country[sortBy];\n      let bProp = b.props.country[sortBy];\n      return aProp - bProp;\n    });\n  }\n};\n\nexport default List;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Flag = ({ url }) => {\n  let styles = {\n    flag: {\n      backgroundImage: `url(${url})`,\n      backgroundSize: \"contain\",\n      height: 15,\n      marginRight: 10,\n      width: 20\n    }\n  };\n  let content = ({ classes }) => <div className={classes.flag} />;\n  let Styled = withStyles(styles)(content);\n  return <Styled />;\n};\n\nexport default Flag;\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Flag from \"./Flag\";\nimport { countryStyles } from \"./styles\";\n\nconst GridItem = ({ name, value }) => (\n  <Grid container>\n    <Grid item xs={4}>\n      <Typography>{name}</Typography>\n    </Grid>\n    <Grid item xs={6}>\n      <Typography>{value}</Typography>\n    </Grid>\n  </Grid>\n);\n\nconst Country = ({ country, classes }) => (\n  <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <Grid container alignItems=\"center\">\n        <Flag url={country.flag} />\n        <Typography className={classes.heading}>{country.name}</Typography>\n      </Grid>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <Grid container>\n        <GridItem name=\"Name:\" value={country.name} />\n        <GridItem name=\"Alpha2Code:\" value={country.alpha2Code} />\n        <GridItem name=\"Capital:\" value={country.capital} />\n        <GridItem name=\"Region:\" value={country.region} />\n        <GridItem name=\"Population:\" value={country.population} />\n        <GridItem name=\"Area:\" value={country.area} />\n        <GridItem\n          name=\"Number of timezones:\"\n          value={country.timezones.length}\n        />\n        <GridItem\n          name=\"Languages:\"\n          value={country.languages.map((language, index) => (\n            <Fragment>\n              <span>{language.name}</span>\n              {index !== country.languages.length - 1 && <span>, </span>}\n            </Fragment>\n          ))}\n        />\n      </Grid>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n);\n\nexport default withStyles(countryStyles)(Country);\n","export const countriesStyles = {\n  buttonContainer: {\n    marginBottom: 10\n  }\n};\n\nexport const countryStyles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n});\n","import React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Loader from \"../../components/shared/Loader\";\nimport List from \"../../components/shared/List\";\nimport Country from \"./Country\";\nimport { countriesStyles } from \"./styles\";\nimport config from \"../../config\";\n\nconst Countries = ({ match, classes }) => {\n  const [region, setRegion] = useState([]);\n  const [sortBy, setSortBy] = useState(\"name\");\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(\n    () => {\n      setLoading(true);\n      (async () => {\n        try {\n          let response = await fetch(`${config.api}/${match.params.id || \"\"}`);\n          let result = await response.json();\n          if (result.length) {\n            setRegion(result);\n          }\n          setLoading(false);\n        } catch (e) {\n          setLoading(false);\n          throw Error(\"Something went wrong\");\n        }\n      })();\n    },\n    [match.params.id, config.api]\n  );\n\n  const onSortBy = useCallback(name => {\n    return () => setSortBy(name);\n  });\n\n  return (\n    <Loader loading={isLoading}>\n      {region.length ? (\n        <Fragment>\n          <div>\n            <Grid className={classes.buttonContainer}>\n              Sort by:\n              <Button onClick={onSortBy(\"name\")}>Name</Button>\n              <Button onClick={onSortBy(\"population\")}>Population</Button>\n            </Grid>\n          </div>\n\n          <List.Sort sortBy={sortBy}>\n            {region.map(country => (\n              <Country country={country} />\n            ))}\n          </List.Sort>\n        </Fragment>\n      ) : (\n        <div>There are no results</div>\n      )}\n    </Loader>\n  );\n};\n\nexport default withStyles(countriesStyles)(Countries);\n","import React, { useCallback } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { headerStyles } from \"./styles\";\n\nconst Header = withStyles(headerStyles)(({ classes }) => (\n  <Route\n    component={({ match, history }) => (\n      <AppBar className={classes.bar}>\n        <Grid container>\n          <Grid item md={5} xs={2}>\n            {match.path === \"/\" && !match.isExact && (\n              <Button\n                color=\"inherit\"\n                onClick={useCallback(\n                  () => {\n                    history.goBack();\n                  },\n                  [history]\n                )}\n              >\n                <ArrowBackIcon />\n              </Button>\n            )}\n          </Grid>\n          <Grid item xs={10} md={4}>\n            <Typography color=\"inherit\" variant=\"h5\" component=\"h2\">\n              Countries of the world\n            </Typography>\n          </Grid>\n        </Grid>\n      </AppBar>\n    )}\n  />\n));\n\nexport default Header;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst NoMatch = () => <Redirect to=\"/\" />;\n\nexport default NoMatch;\n","import { theme } from \"./config\";\n\nexport const appStyles = {\n  wrapper: {\n    marginTop: 50,\n    backgroundColor: theme.colors.lightGrey,\n    padding: 20,\n    minHeight: \"100vh\"\n  }\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Regions from \"./pages/regions\";\nimport Countries from \"./pages/countries\";\nimport Header from \"./components/shared/Header\";\nimport NoMatch from \"./components/shared/NoMatch\";\nimport { appStyles } from \"./styles\";\n\nconst App = ({ classes }) => (\n  <Grid>\n    <Header />\n    <Grid className={classes.wrapper}>\n      <Switch>\n        <Route exact path=\"/\" component={Regions} />\n        <Route path=\"/region/:id\" component={Countries} />\n        <Route component={NoMatch} />\n      </Switch>\n    </Grid>\n  </Grid>\n);\nexport default withStyles(appStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}